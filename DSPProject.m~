clear; clc; close all;

load gong.mat;

% read in RGB image
color_image = imread('bladerunner.jpeg');
imshow(color_image)

% convert RGB image to grayscale using rgb2gray()
grayscale_image = rgb2gray(color_image);
figure
imshow(grayscale_image)
img_height = size(grayscale_image, 1);
img_width = size(grayscale_image, 2);
sprintf('Image height: %d', img_height);
sprintf('Image width: %d', img_width);

% push all image values to a row vector (MxN image to 1xM*N vector)
image_vec = reshape(grayscale_image, 1, []);

% sanity check for image vector
expected_dims = [1 img_height*img_width];
actual_dims = [1 size(image_vec, 1)*size(image_vec, 2)];
assert(isequal(expected_dims,actual_dims), "Image vector conversion failed!");

% convert image_vec from uint8 to doubles to work with gong.mat library (to
% play sounds)
image_vec = im2double(image_vec);

image_dtft = abs(dtft(image_grayscale));
sound(conv(image_dtft, ));



%sound(image_vec);